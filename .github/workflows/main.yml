name: Build SageAttention 2.2 Chatgpt (Windows • cu129 • Py3.13 • Torch 2.8)

on:
  workflow_dispatch:
    inputs:
      repo_ref:
        description: "Git ref of SageAttention (tag/branch/sha)"
        required: false
        default: "v2.2"
      wheel_suffix:
        description: "Optional wheel version suffix (e.g. +rev1)"
        required: false
        default: ""

permissions:
  contents: read

jobs:
  build-win-cu129:
    name: Build wheel (Windows, CUDA 12.9, Py 3.13, Torch 2.8.0+cu129)
    runs-on: windows-2022
    timeout-minutes: 60

    env:
      # Pin target toolchain / libs
      PYTHON_VERSION: "3.13.7"
      CUDA_VERSION: "12.9.0"
      TORCH_VERSION: "2.8.0"
      TORCH_CUDA_TAG: "cu129"

      # Ada Lovelace (RTX 4090) = SM 8.9
      TORCH_CUDA_ARCH_LIST: "8.9"
      FORCE_CUDA: "1"
      # If the project honors it:
      SAGEATTENTION_FORCE_CUDA: "1"

      # Optional: tweak MSVC parallelism for faster builds
      CMAKE_BUILD_PARALLEL_LEVEL: "4"

      # Wheel naming tweak
      EXTRA_WHEEL_SUFFIX: "${{ inputs.wheel_suffix }}"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.repo_ref }}

      # Python 3.13.7
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          check-latest: true
          cache: "pip"

      # CUDA 12.9 (adds CUDA_PATH and nvcc to PATH)
      - name: Install CUDA Toolkit ${{ env.CUDA_VERSION }}
        uses: Jimver/cuda-toolkit@v0.2.25
        with:
          cuda: ${{ env.CUDA_VERSION }}
          # On Windows runners, the action sets CUDA_PATH and updates PATH for nvcc

      # Ensure MSVC developer environment (VS 2022 is preinstalled on windows-2022)
      - name: Set up MSVC Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1

      - name: Show toolchain versions
        shell: powershell
        run: |
          python --version
          nvcc --version
          cl 2>$null | Select-Object -First 1
          echo "CUDA_PATH=$Env:CUDA_PATH"
          echo "GITHUB_PATH=$Env:GITHUB_PATH"
          echo "TORCH_CUDA_ARCH_LIST=$Env:TORCH_CUDA_ARCH_LIST"

      - name: Upgrade build tooling
        run: |
          python -m pip install -U pip wheel setuptools build ninja cmake cibuildwheel

      # Install PyTorch 2.8.0 with cu129 wheels
      - name: Install PyTorch ${{ env.TORCH_VERSION }} + ${{ env.TORCH_CUDA_TAG }}
        run: |
          python -m pip install --index-url https://download.pytorch.org/whl/${{ env.TORCH_CUDA_TAG }} \
            torch==${{ env.TORCH_VERSION }}+${{ env.TORCH_CUDA_TAG }}
          python -c "import torch; print('Torch:', torch.__version__, 'CUDA:', torch.version.cuda)"

      # (Optional) install project build deps before cibuildwheel (if your pyproject needs extras)
      - name: Pre-build deps (optional)
        run: |
          python -m pip install -U packaging

      # Build wheels with cibuildwheel (Windows only, Python 3.13 only)
      - name: Build wheel (cp313-win_amd64)
        env:
          CIBW_BUILD: "cp313-win_amd64"
          CIBW_ARCHS_WINDOWS: "AMD64"
          CIBW_BUILD_VERBOSITY: "1"
          # Pass CUDA env into cibuildwheel isolated build
          CIBW_ENVIRONMENT_WINDOWS: >
            FORCE_CUDA=1
            SAGEATTENTION_FORCE_CUDA=1
            TORCH_CUDA_ARCH_LIST=${{ env.TORCH_CUDA_ARCH_LIST }}
            CUDA_PATH=${{ env.CUDA_PATH }}
            PATH=${{ env.CUDA_PATH }}\bin;${PATH}
          # Ensure torch & toolchain exist inside the build environment
          CIBW_BEFORE_BUILD_WINDOWS: >
            python -m pip install -U pip wheel setuptools ninja cmake &&
            python -m pip install --index-url https://download.pytorch.org/whl/${{ env.TORCH_CUDA_TAG }} torch==${{ env.TORCH_VERSION }}+${{ env.TORCH_CUDA_TAG }}
          # If your project uses tests, you can enable them here
          CIBW_TEST_SKIP: "*"
          CIBW_PRERELEASE_PYTHONS: "false"
        run: |
          # If your package dir is not the repo root, cd into it (e.g., SageAttention/)
          # pushd SageAttention
          cibuildwheel --platform windows --output-dir wheelhouse
          # popd

      # Optionally rewrite wheel filename to include +cu129 suffix (if project doesn't already)
      - name: Add wheel suffix (optional)
        if: ${{ env.EXTRA_WHEEL_SUFFIX != '' }}
        shell: powershell
        run: |
          $wheels = Get-ChildItem -Path "wheelhouse" -Filter "*.whl"
          foreach ($w in $wheels) {
            $new = $w.Name -replace '\.whl$', "${{ env.EXTRA_WHEEL_SUFFIX }}.whl"
            Rename-Item -Path $w.FullName -NewName $new
          }

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: sageattention-2.2-cu129-win-py313
          path: wheelhouse/*.whl
          if-no-files-found: error
